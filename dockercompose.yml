version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.4
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      - KC_DB=dev-mem
      - KC_HOSTNAME=localhost
      - KC_HTTP_PORT=8080
      - KC_PROXY=edge
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: ["start-dev"]
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  idp-service-api:
    build:
      context: ./src/Services/IDP.Service/IDP.Service.Api
      dockerfile: Dockerfile
    container_name: idp-service-api
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - Keycloak__Authority=http://keycloak:8080/realms/master
      - Keycloak__Url=http://keycloak:8080
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

volumes:
  keycloak_data:
    driver: local

networks:
  app-network:
    driver: bridge
